<?xml version="1.0" encoding="utf-8"?>
<root>
    <!-- 
      Microsoft ResX Schema 
      
      Version 2.0
      
      The primary goals of this format is to allow a simple XML format 
      that is mostly human readable. The generation and parsing of the 
      various data types are done through the TypeConverter classes 
      associated with the data types.
      
      Example:
      
      ... ado.net/XML headers & schema ...
      <resheader name="resmimetype">text/microsoft-resx</resheader>
      <resheader name="version">2.0</resheader>
      <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
      <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
      <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
      <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
      <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
          <value>[base64 mime encoded serialized .NET Framework object]</value>
      </data>
      <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
          <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
          <comment>This is a comment</comment>
      </data>
                  
      There are any number of "resheader" rows that contain simple 
      name/value pairs.
      
      Each data row contains a name, and value. The row also contains a 
      type or mimetype. Type corresponds to a .NET class that support 
      text/value conversion through the TypeConverter architecture. 
      Classes that don't support this are serialized and stored with the 
      mimetype set.
      
      The mimetype is used for serialized objects, and tells the 
      ResXResourceReader how to depersist the object. This is currently not 
      extensible. For a given mimetype the value must be set accordingly:
      
      Note - application/x-microsoft.net.object.binary.base64 is the format 
      that the ResXResourceWriter will generate, however the reader can 
      read any of the formats listed below.
      
      mimetype: application/x-microsoft.net.object.binary.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
              : and then encoded with base64 encoding.
      
      mimetype: application/x-microsoft.net.object.soap.base64
      value   : The object must be serialized with 
              : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
              : and then encoded with base64 encoding.
  
      mimetype: application/x-microsoft.net.object.bytearray.base64
      value   : The object must be serialized into a byte array 
              : using a System.ComponentModel.TypeConverter
              : and then encoded with base64 encoding.
      -->
    <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root"
                xmlns="">
        <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
        <xsd:element name="root" msdata:IsDataSet="true">
            <xsd:complexType>
                <xsd:choice maxOccurs="unbounded">
                    <xsd:element name="metadata">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" use="required" type="xsd:string"/>
                            <xsd:attribute name="type" type="xsd:string"/>
                            <xsd:attribute name="mimetype" type="xsd:string"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="assembly">
                        <xsd:complexType>
                            <xsd:attribute name="alias" type="xsd:string"/>
                            <xsd:attribute name="name" type="xsd:string"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="data">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
                            <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
                            <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
                            <xsd:attribute ref="xml:space"/>
                        </xsd:complexType>
                    </xsd:element>
                    <xsd:element name="resheader">
                        <xsd:complexType>
                            <xsd:sequence>
                                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                            </xsd:sequence>
                            <xsd:attribute name="name" type="xsd:string" use="required"/>
                        </xsd:complexType>
                    </xsd:element>
                </xsd:choice>
            </xsd:complexType>
        </xsd:element>
    </xsd:schema>
    <resheader name="resmimetype">
        <value>text/microsoft-resx</value>
    </resheader>
    <resheader name="version">
        <value>2.0</value>
    </resheader>
    <resheader name="reader">
        <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <resheader name="writer">
        <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral,
            PublicKeyToken=b77a5c561934e089
        </value>
    </resheader>
    <data name="ComplexObjectCollectionValidationError_ContainsNull" xml:space="preserve">
    <value>Не может быть пустым</value>
  </data>
    <data name="ComplexObjectCollectionValidationError_Index" xml:space="preserve">
    <value>Элемент {0}: </value>
  </data>
    <data name="ComplexObjectCollectionValidationError" xml:space="preserve">
    <value>Последовательность '{0}' содержит элементы со следующими ошибками</value>
  </data>
    <data name="CollectionMinLengthError" xml:space="preserve">
    <value>Количество элементов в последовательности '{0}' должно быть не менее {1}</value>
  </data>
    <data name="CompareError" xml:space="preserve">
    <value>Поля '{0}' и '{1}' должны совпадать</value>
  </data>
    <data name="CompareToGreaterThanError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть больше значения поля '{1}'</value>
  </data>
    <data name="CompareToGreaterThanOrEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть больше или равно значению поля '{1}'</value>
  </data>
    <data name="CompareToSmallerThanError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть меньше значения поля '{1}'</value>
  </data>
    <data name="CompareToSmallerThanOrEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть меньше или равно значению поля '{1}'</value>
  </data>
    <data name="ComplexObjectValidationError" xml:space="preserve">
    <value>Поле '{0}' имеет следующие ошибки</value>
  </data>
    <data name="DateTimeError" xml:space="preserve">
    <value>Дата в поле '{0}' должна лежать в диапазоне {1} - {2}</value>
  </data>
    <data name="DigitRangeValuesError" xml:space="preserve">
    <value>Поле '{0}' должно иметь значение не менее {1} и не более {2}</value>
  </data>
    <data name="DuplicateNameError" xml:space="preserve">
    <value>Объект с таким названием уже существует</value>
  </data>
    <data name="FileNotFoundError" xml:space="preserve">
    <value>Один или несколько файлов не найдены</value>
  </data>
    <data name="FileParseByLineError" xml:space="preserve">
    <value>Во время обработки файла произошла ошибка в строке: {0}</value>
  </data>
    <data name="InvalidEmailAddressFormatError" xml:space="preserve">
    <value>E-mail введен некорректно</value>
  </data>
    <data name="InvalidFilePathError" xml:space="preserve">
    <value>Один или несколько файлов имеют некорректный путь сохранения</value>
  </data>
    <data name="InvalidPhoneFormatError" xml:space="preserve">
    <value>Номер телефона введен некорректно</value>
  </data>
    <data name="NoIdError" xml:space="preserve">
    <value>Идентификатор объекта не найден</value>
  </data>
    <data name="NotFoundError" xml:space="preserve">
    <value>Объект не найден</value>
  </data>
    <data name="RequiredError" xml:space="preserve">
    <value>Поле '{0}' должно быть заполнено</value>
  </data>
    <data name="SomethingWentWrong" xml:space="preserve">
    <value>Что-то пошло не так:(</value>
  </data>
    <data name="StringFormatError" xml:space="preserve">
    <value>Поле '{0}' имеет неверный формат</value>
  </data>
    <data name="StringMaxLengthError" xml:space="preserve">
    <value>Поле '{0}' должно содержать не более {1} символов</value>
  </data>
    <data name="StringMinLengthError" xml:space="preserve">
    <value>Поле '{0}' должно содержать не менее {1} символов</value>
  </data>
    <data name="StringRangeLengthError" xml:space="preserve">
    <value>Поле '{0}' должно содержать не менее {1} и не более {2} символов</value>
  </data>
    <data name="CollectionMaxLengthError" xml:space="preserve">
    <value>Количество элементов в последовательности '{0}' должно быть не более {1}</value>
  </data>
    <data name="CollectionRangeLengthError" xml:space="preserve">
    <value>Количество элементов в последовательности '{0}' должно быть не менее {1} и не более {2}</value>
  </data>
    <data name="CompareToNotEqualError" xml:space="preserve">
    <value>Значение поля '{0}' не должно быть равно значению поля '{1}'</value>
  </data>
    <data name="CompareToEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть равно значению поля '{1}'</value>
  </data>
    <data name="ValueEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть равно '{1}'</value>
  </data>
    <data name="ValueGreaterThanError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть больше '{1}'</value>
  </data>
    <data name="ValueGreaterThanOrEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть больше или равно '{1}'</value>
  </data>
    <data name="ValueNotEqualError" xml:space="preserve">
    <value>Значение поля '{0}' не должно быть равно '{1}'</value>
  </data>
    <data name="ValueSmallerThanError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть меньше '{1}'</value>
  </data>
    <data name="ValueSmallerThanOrEqualError" xml:space="preserve">
    <value>Значение поля '{0}' должно быть меньше или равно '{1}'</value>
  </data>
    <data name="FileMaxSizeError" xml:space="preserve">
    <value>Размер файла '{0}' должен быть меньше {1}</value>
  </data>
    <data name="FileMinSizeError" xml:space="preserve">
    <value>Размер файла '{0}' должен быть больше {1}</value>
  </data>
    <data name="FileRangeSizeError" xml:space="preserve">
    <value>Размер файла '{0}' должен быть не менее {1} и не более {2}</value>
  </data>
    <data name="ErrorOccurred" xml:space="preserve">
    <value>Произошла ошибка: {0}</value>
  </data>
    <data name="CollectionHasDuplicatesError" xml:space="preserve">
    <value>Последовательность '{0}' содержит дублирующиеся элементы</value>
  </data>
    <data name="OneOrMoreObjectsInCollectionNotFoundError" xml:space="preserve">
    <value>Один или несколько элементов последовательности '{0}' не найдены</value>
  </data>
    <data name="SpecifiedObjectNotFoundError" xml:space="preserve">
      <value>Объект '{0}' не найден</value>
    </data>
    <data name="ValueRangeValuesError" xml:space="preserve">
      <value>Значение поля '{0}' должно лежать в интервале '{1}' - '{2}'</value>
    </data>
    <data name="FileContainsNoDataError" xml:space="preserve">
      <value>Файл не содержит данных</value>
    </data>
    <data name="StringMaxSizeError" xml:space="preserve">
      <value>Размер строки '{0}' не должен быть больше {1} байт</value>
    </data>
</root>